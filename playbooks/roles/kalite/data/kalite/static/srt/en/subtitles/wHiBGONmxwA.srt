1
00:00:00,056 --> 00:00:08,201
Over 2000 years ago Euclid showed every number has exactly one prime factorization, which we can think of as a secret key.

2
00:00:08,201 --> 00:00:13,833
It turns out that prime factorization is a fundamentally hard problem.

3
00:00:13,956 --> 00:00:21,269
Let's clarify, what we mean by easy and hard, by introducing what's called time complexity.

4
00:00:21,269 --> 00:00:26,638
We've all multiplied numbers before and each of us has our own rules for doing so in order to speed things up.

5
00:00:26,945 --> 00:00:32,536
If we program a computer to multiply numbers, it can do so much faster than any human can.

6
00:00:32,966 --> 00:00:38,294
Here's a graph that shows the time required for a computer to multiply two numbers.

7
00:00:38,570 --> 00:00:44,162
And of course the time required to find the answer increases as the numbers get larger.

8
00:00:44,162 --> 00:00:50,127
Notice that the computation time stays well under one second, even with fairly large numbers.

9
00:00:50,127 --> 00:00:55,613
Therefore it is easy to perform. Now compare this to prime factorization.

10
00:00:55,613 --> 00:01:02,540
If someone told you to find the prime factorization of 589, you'll notice the problem feels harder.

11
00:01:02,540 --> 00:01:10,244
No matter what your strategy, it'll require some trial and error until you find a number, which evenly divides 589.

12
00:01:10,244 --> 00:01:16,292
After some struggle you'll find 19x31 is the prime factorization.

13
00:01:16,292 --> 00:01:25,668
If you were told to find the prime factorization of 437,231, you'd probably give up and get a computer to help you.

14
00:01:25,944 --> 00:01:34,078
This works fine for small numbers, but if we try to factor larger and larger numbers there is a runaway effect.

15
00:01:34,078 --> 00:01:40,744
The time needed to perform the calculations increases rapidly as there are more steps involved.

16
00:01:40,744 --> 00:01:44,243
As the numbers grow the computer needs minutes, then hours,

17
00:01:44,243 --> 00:01:49,410
and eventually it'll require hundreds or thousands of years to factor huge numbers.

18
00:01:49,410 --> 00:01:57,202
We therefore say it is a hard problem, due to this growth rate of time needed to solve it.

19
00:01:57,202 --> 00:02:01,660
So factorization is what Cocks used to build the trap door solution.

20
00:02:01,660 --> 00:02:09,327
Step 1: Imagine Alice randomly generated a prime number over 150 digits long, call this P1.

21
00:02:09,327 --> 00:02:14,992
Then a second random prime number roughly the same size, call this P2.

22
00:02:14,992 --> 00:02:23,222
She then multiplies these 2 primes together to get a composite number N, which is over 300 digits long.

23
00:02:23,222 --> 00:02:28,785
This multiplication step will take less than a second, you could even do it in the web browser.

24
00:02:29,877 --> 00:02:35,461
Then she takes the factorization of N, P1xP2, and hides it.

25
00:02:35,461 --> 00:02:41,955
Now, if she gave N to anyone else, they'd have to have a computer running for years to find the solution.

26
00:02:42,831 --> 00:02:50,162
Step 2: Cocks needed to find a function which depends on knowing the factorization of N.

27
00:02:50,162 --> 00:02:54,162
For this he looked back to work done in 1760 by Swiss mathematician Leonard Euler.
