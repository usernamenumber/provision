1
00:00:00,000 --> 00:00:00,450
   

2
00:00:00,450 --> 00:00:06,640
We've seen in several videos
that the column space of a

3
00:00:06,640 --> 00:00:08,410
matrix is pretty straightforward
to find.

4
00:00:08,410 --> 00:00:12,380
In this situation the column
space of A is just equal to

5
00:00:12,380 --> 00:00:16,170
all of the linear combinations
of the column vectors of A.

6
00:00:16,170 --> 00:00:18,690
Another way of saying all of
the linear combinations is

7
00:00:18,690 --> 00:00:22,430
just the span of each of
these column vectors.

8
00:00:22,430 --> 00:00:25,930
So if we call this one
right here a1.

9
00:00:25,930 --> 00:00:29,050
This is a2, a3, a4.

10
00:00:29,050 --> 00:00:31,620
This is a5.

11
00:00:31,620 --> 00:00:37,200
Then the column space of A is
just equal to the span of a1,

12
00:00:37,200 --> 00:00:43,430
a2, a3, a4, and a5.

13
00:00:43,430 --> 00:00:44,560
Fair enough.

14
00:00:44,560 --> 00:00:47,260
But a more interesting question
is whether these guys

15
00:00:47,260 --> 00:00:50,300
form a basis for the
column space.

16
00:00:50,300 --> 00:00:53,680
Or even more interesting, what
is the basis for the column

17
00:00:53,680 --> 00:00:54,450
space of A?

18
00:00:54,450 --> 00:00:56,080
And in this video I'm going
to show you a method for

19
00:00:56,080 --> 00:00:58,620
determining the basis, and along
the way we'll get an

20
00:00:58,620 --> 00:01:00,130
intuition for maybe
why it works.

21
00:01:00,130 --> 00:01:02,540
And if I have time, actually I
probably won't have time in

22
00:01:02,540 --> 00:01:02,580
this video.

23
00:01:02,580 --> 00:01:04,980
In the next video I'll prove
to you why it works.

24
00:01:04,980 --> 00:01:08,780
   

25
00:01:08,780 --> 00:01:14,280
So we want to figure out
the basis for the

26
00:01:14,280 --> 00:01:15,960
column space of A.

27
00:01:15,960 --> 00:01:24,150
Remember the basis just means
that vectors span, C, A.

28
00:01:24,150 --> 00:01:26,730
Clearly these vectors span
our column space.

29
00:01:26,730 --> 00:01:29,150
I mean the span of these vectors
is the column space.

30
00:01:29,150 --> 00:01:31,420
But in order to be a basis, the
vectors also have to be

31
00:01:31,420 --> 00:01:35,590
linearly, let me just write,
linearly independent.

32
00:01:35,590 --> 00:01:39,120
And we don't know whether these
guys or what subset of

33
00:01:39,120 --> 00:01:42,990
these guys are linearly
independent.

34
00:01:42,990 --> 00:01:45,050
So what you do-- and I'm just
really going to describe the

35
00:01:45,050 --> 00:01:47,930
process here, as opposed to the
proof-- is you put this

36
00:01:47,930 --> 00:01:49,790
guy in reduced row
echelon form.

37
00:01:49,790 --> 00:01:51,310
So let's do that.

38
00:01:51,310 --> 00:01:54,600
So let me see if
we can do that.

39
00:01:54,600 --> 00:01:58,610
Let's keep our first
row the same.

40
00:01:58,610 --> 00:02:00,670
1, 0.

41
00:02:00,670 --> 00:02:02,840
Let me do it actually in the
right side right here.

42
00:02:02,840 --> 00:02:04,250
So let's keep the first
row the same.

43
00:02:04,250 --> 00:02:07,490
1, 0, minus 1, 0, 4.

44
00:02:07,490 --> 00:02:12,240
And then let's replace our
second row with the second row

45
00:02:12,240 --> 00:02:16,260
minus 2 times the first row.

46
00:02:16,260 --> 00:02:17,825
So then our second row.

47
00:02:17,825 --> 00:02:21,100
2 minus 2 times 1 is 0.

48
00:02:21,100 --> 00:02:24,530
1 minus 2 times 0 is 1.

49
00:02:24,530 --> 00:02:31,350
0 minus 2 times negative
1, so that's 0 plus 2.

50
00:02:31,350 --> 00:02:34,800
0 minus 2 times 0 is just 0.

51
00:02:34,800 --> 00:02:38,570
And then 9 minus
2 times 4 is 1.

52
00:02:38,570 --> 00:02:39,620
Fair enough.

53
00:02:39,620 --> 00:02:41,770
Now we want to zero
out this guy.

54
00:02:41,770 --> 00:02:43,400
Well it seems like a pretty
straightforward way.

55
00:02:43,400 --> 00:02:46,590
Just replace this row with this
row plus the first row.

56
00:02:46,590 --> 00:02:50,920
So minus 1 plus 1 is 0.

57
00:02:50,920 --> 00:02:53,420
2 plus 0 is 2.

58
00:02:53,420 --> 00:02:57,000
5 minus 1 is 4.

59
00:02:57,000 --> 00:03:00,730
1 plus 0 is 1.

60
00:03:00,730 --> 00:03:05,290
Minus 5 plus 4 is minus 1.

61
00:03:05,290 --> 00:03:09,330
And then finally we got this guy
right here, and in order

62
00:03:09,330 --> 00:03:11,910
to zero him out, let's
replace him with him

63
00:03:11,910 --> 00:03:14,210
minus the first row.

64
00:03:14,210 --> 00:03:18,120
So 1 minus 1 is 0.

65
00:03:18,120 --> 00:03:21,750
Minus 1 minus 0 is minus 1.

66
00:03:21,750 --> 00:03:25,690
Minus 3 minus negative 1, that's
minus 3 plus 1, so

67
00:03:25,690 --> 00:03:27,540
that's minus 2.

68
00:03:27,540 --> 00:03:31,900
Minus 2 minus 0 is minus 2.

69
00:03:31,900 --> 00:03:35,360
And then 9 minus 4 is 5.

70
00:03:35,360 --> 00:03:37,360
So we did one round.

71
00:03:37,360 --> 00:03:41,600
We got our first pivot
column going.

72
00:03:41,600 --> 00:03:45,420
Now let's do another round
of row operations.

73
00:03:45,420 --> 00:03:47,090
Well we want to zero all
of these guys out.

74
00:03:47,090 --> 00:03:48,930
Luckily this is already 0.

75
00:03:48,930 --> 00:03:51,100
So we don't have to change our
first row or our second row.

76
00:03:51,100 --> 00:03:55,490
So we get 1, 0, minus 1, 0, 4.

77
00:03:55,490 --> 00:04:01,980
Our second row becomes
0, 1, 2, 0, 1.

78
00:04:01,980 --> 00:04:05,880
And now let us see if we can
eliminate this guy right here.

79
00:04:05,880 --> 00:04:09,580
And let's do it by replacing our
blue row, our third row,

80
00:04:09,580 --> 00:04:12,760
with the third row minus
2 times the second row.

81
00:04:12,760 --> 00:04:15,600
So 0 minus 2 times 0 is 0.

82
00:04:15,600 --> 00:04:18,170
2 minus 2 times 1 is 0.

83
00:04:18,170 --> 00:04:21,630
4 minus 2 times 2 is 0.

84
00:04:21,630 --> 00:04:26,350
1 minus 2 times 0 is 1.

85
00:04:26,350 --> 00:04:31,660
Minus 1 minus 2 times
1 is minus 3.

86
00:04:31,660 --> 00:04:32,870
All right.

87
00:04:32,870 --> 00:04:35,690
Now this last guy we want to
eliminate him, and we want

88
00:04:35,690 --> 00:04:37,590
turn this into a 0.

89
00:04:37,590 --> 00:04:40,620
Let's replace this fourth row
with the fourth row plus the

90
00:04:40,620 --> 00:04:41,300
second row.

91
00:04:41,300 --> 00:04:43,690
So 0 plus 0 is 0.

92
00:04:43,690 --> 00:04:47,320
Minus 1 plus minus 1 is 0.

93
00:04:47,320 --> 00:04:49,920
Minus 2 plus minus 2 is 0.

94
00:04:49,920 --> 00:04:54,190
Minus 2 plus 0 is minus 2.

95
00:04:54,190 --> 00:04:57,070
And then 5 plus 1 is 6.

96
00:04:57,070 --> 00:05:00,850
   

97
00:05:00,850 --> 00:05:02,950
We're getting close.

98
00:05:02,950 --> 00:05:07,050
So let's look at our
pivot entries.

99
00:05:07,050 --> 00:05:08,490
We have this is a pivot entry.

100
00:05:08,490 --> 00:05:09,900
That's a pivot entry.

101
00:05:09,900 --> 00:05:14,420
And this is not a pivot entry,
because it's following

102
00:05:14,420 --> 00:05:15,500
obviously another.

103
00:05:15,500 --> 00:05:19,370
This guy is a pivot entry
right here, or will be.

104
00:05:19,370 --> 00:05:23,950
Zero this minus 2 out, and
I think we'll be done.

105
00:05:23,950 --> 00:05:26,830
So let me write my first row
just the way it is, because

106
00:05:26,830 --> 00:05:28,090
everything above it is
0, so we don't have

107
00:05:28,090 --> 00:05:28,790
to worry about it.

108
00:05:28,790 --> 00:05:38,110
So my first row I can just write
as 1, 0, minus 1, 0, 4.

109
00:05:38,110 --> 00:05:44,170
I can write my second
row, 0, 1, 2, 0, 1.

110
00:05:44,170 --> 00:05:49,260
I can write my third row
as 0, 0, 0, 1 minus 3.

111
00:05:49,260 --> 00:05:51,830
And now let's replace
my fourth row.

112
00:05:51,830 --> 00:05:55,830
Let's replace it with it plus
2 times the second row.

113
00:05:55,830 --> 00:06:00,690
So 0 plus 2 times 0, 0 plus 2
times 0, 0 plus 2 times 0,

114
00:06:00,690 --> 00:06:04,270
minus 2 plus 2 times
1 is just 0.

115
00:06:04,270 --> 00:06:08,440
6 plus 2 times minus 3, that's
6 minus 6, that's just 0.

116
00:06:08,440 --> 00:06:13,570
And there we've actually put
our matrix in reduced row

117
00:06:13,570 --> 00:06:14,560
echelon form.

118
00:06:14,560 --> 00:06:17,710
So let me put brackets
around it.

119
00:06:17,710 --> 00:06:21,570
It's not so bad if you just
kind of go and just do the

120
00:06:21,570 --> 00:06:22,350
manipulations.

121
00:06:22,350 --> 00:06:25,410
And sometimes you kind of get
a headache thinking about

122
00:06:25,410 --> 00:06:27,110
doing something like this,
but this wasn't too bad.

123
00:06:27,110 --> 00:06:31,980
So this is let me just say the
reduced row echelon form of A.

124
00:06:31,980 --> 00:06:34,010
Let me just call
that matrix R.

125
00:06:34,010 --> 00:06:37,520
So this is matrix
R right there.

126
00:06:37,520 --> 00:06:39,410
Now what do we see
about matrix R?

127
00:06:39,410 --> 00:06:42,480
Well it has 3 pivot entries,
or 3 pivot columns.

128
00:06:42,480 --> 00:06:45,460
Let me square them out,
or circle them out.

129
00:06:45,460 --> 00:06:49,700
Column 1 is a pivot column,
column 2 is a pivot column,

130
00:06:49,700 --> 00:06:54,890
and column 3 is a
pivot column.

131
00:06:54,890 --> 00:06:58,340
And we've done this in
previous videos.

132
00:06:58,340 --> 00:07:00,040
There's two things
that you can see.

133
00:07:00,040 --> 00:07:03,140
These three columns are clearly
linearly independent.

134
00:07:03,140 --> 00:07:04,390
How do we know that?

135
00:07:04,390 --> 00:07:06,750
   

136
00:07:06,750 --> 00:07:08,220
And that's just with respect
to each other.

137
00:07:08,220 --> 00:07:14,060
If we just took a set of, let's
call this r1, r2, and

138
00:07:14,060 --> 00:07:17,830
this would be r3, this would
be r4 right here.

139
00:07:17,830 --> 00:07:27,950
It's clear that the set r1,
r2, and r4 is linearly

140
00:07:27,950 --> 00:07:28,335
independent.

141
00:07:28,335 --> 00:07:30,000
And you say why is that?

142
00:07:30,000 --> 00:07:33,110
Well look, our one's got a 1
here, while the other two have

143
00:07:33,110 --> 00:07:35,550
a 0 in that entry, right?

144
00:07:35,550 --> 00:07:37,430
And this is by definition
of pivot entries.

145
00:07:37,430 --> 00:07:40,890
Pivot entries have 0's, or
pivot columns have 0's

146
00:07:40,890 --> 00:07:44,310
everywhere except for
where they have a 1.

147
00:07:44,310 --> 00:07:47,830
For any pivot column, it will be
the only pivot column that

148
00:07:47,830 --> 00:07:49,210
has 0's there.

149
00:07:49,210 --> 00:07:52,170
Or it'll be the only pivot
column that has a 1 there.

150
00:07:52,170 --> 00:07:55,410
So there's no way that you can
add up combinations of these

151
00:07:55,410 --> 00:07:56,230
guys to get a 1.

152
00:07:56,230 --> 00:07:58,950
You can say 100 times
0, minus 3, times 0.

153
00:07:58,950 --> 00:08:00,140
You're just going to
get a bunch of 0's.

154
00:08:00,140 --> 00:08:01,910
So no combination of these
two guys is going to be

155
00:08:01,910 --> 00:08:03,270
equal to that guy.

156
00:08:03,270 --> 00:08:07,660
By the same reasoning, no
combination of that and that

157
00:08:07,660 --> 00:08:08,680
is going to equal this.

158
00:08:08,680 --> 00:08:11,140
This is by definition
of a pivot entry.

159
00:08:11,140 --> 00:08:13,770
When you put it in reduced row
echelon form, it's very clear

160
00:08:13,770 --> 00:08:16,870
that any pivot column will
be the only one to

161
00:08:16,870 --> 00:08:18,950
have 1 in that place.

162
00:08:18,950 --> 00:08:21,970
So it's very clear that these
guys are linearly independent.

163
00:08:21,970 --> 00:08:24,300
Now it turns out, and I haven't
proven it to you, that

164
00:08:24,300 --> 00:08:28,820
the corresponding columns in
A-- this is r1, but it's A

165
00:08:28,820 --> 00:08:31,840
before we put it in reduced row
echelon form-- that these

166
00:08:31,840 --> 00:08:41,380
guys right here, so a1, a2,
and a4 are also linearly

167
00:08:41,380 --> 00:08:42,760
independent.

168
00:08:42,760 --> 00:08:47,440
So a1-- let me circle
it-- a2, and a4.

169
00:08:47,440 --> 00:08:52,570
So if I write it like this,
a1, a2, and a4.

170
00:08:52,570 --> 00:08:55,310
Let me write it in
set notation.

171
00:08:55,310 --> 00:08:59,170
These guys are also linearly
independant,

172
00:08:59,170 --> 00:09:00,020
which I haven't proven.

173
00:09:00,020 --> 00:09:01,970
But I think you can kind of
get a sense that these row

174
00:09:01,970 --> 00:09:04,960
operations really don't change
the sense of the matrix.

175
00:09:04,960 --> 00:09:08,380
And I'll do a better explanation
of this, but I

176
00:09:08,380 --> 00:09:10,770
really just wanted you to
understand how to develop a

177
00:09:10,770 --> 00:09:12,500
basis for the column space.

178
00:09:12,500 --> 00:09:13,700
So they're linearly
independent.

179
00:09:13,700 --> 00:09:17,310
So the next question is do they
span our column space?

180
00:09:17,310 --> 00:09:19,970
And in order for them to span,
obviously all of these 5

181
00:09:19,970 --> 00:09:22,470
vectors, if you have all of
them, that's going to span

182
00:09:22,470 --> 00:09:24,290
your column space
by definition.

183
00:09:24,290 --> 00:09:26,590
But if we can show, and I'm not
going to show it in this

184
00:09:26,590 --> 00:09:31,850
video, but it turns out that you
can always represent the

185
00:09:31,850 --> 00:09:38,660
non-pivot columns as
linear combinations

186
00:09:38,660 --> 00:09:40,870
of the pivot columns.

187
00:09:40,870 --> 00:09:43,260
And we've kind of touched on
that in previous videos where

188
00:09:43,260 --> 00:09:46,220
we find a solution for the
null space and all that.

189
00:09:46,220 --> 00:09:49,740
So these guys can definitely
be represented as linear

190
00:09:49,740 --> 00:09:50,880
combinations of these guys.

191
00:09:50,880 --> 00:09:55,230
I haven't shown you that, but
if you take that on faith,

192
00:09:55,230 --> 00:09:57,415
then you don't need
that column and

193
00:09:57,415 --> 00:09:58,460
that column to span.

194
00:09:58,460 --> 00:10:03,970
If you did then, or I guess a
better way to think it, you

195
00:10:03,970 --> 00:10:05,535
don't need them to span,
although they

196
00:10:05,535 --> 00:10:06,520
are part of the span.

197
00:10:06,520 --> 00:10:08,925
Because if you needed this guy,
you can just construct

198
00:10:08,925 --> 00:10:11,520
him with linear combinations
of these guys.

199
00:10:11,520 --> 00:10:14,100
So if you wanted to figure out
a basis for the column space

200
00:10:14,100 --> 00:10:16,160
of A, you literally
just take A into

201
00:10:16,160 --> 00:10:17,900
reduced row echelon form.

202
00:10:17,900 --> 00:10:20,600
You look at the pivot entries
in the reduced row echelon

203
00:10:20,600 --> 00:10:23,450
form of A, and that's
those three.

204
00:10:23,450 --> 00:10:26,540
And then you look at the
corresponding columns to those

205
00:10:26,540 --> 00:10:28,660
pivot columns in your
original A.

206
00:10:28,660 --> 00:10:31,020
And those form the basis.

207
00:10:31,020 --> 00:10:33,690
Because any linear combination
of them, or linear

208
00:10:33,690 --> 00:10:36,470
combinations of them can be
used to construct the

209
00:10:36,470 --> 00:10:40,410
non-pivot columns, and they're
linearly independant.

210
00:10:40,410 --> 00:10:41,490
So I haven't shown you that.

211
00:10:41,490 --> 00:10:47,350
But for this case, if you want
to know the basis, it's just

212
00:10:47,350 --> 00:10:49,500
a1, a2, and a4.

213
00:10:49,500 --> 00:10:52,310
   

214
00:10:52,310 --> 00:10:53,860
And now we can answer
another question.

215
00:10:53,860 --> 00:10:56,610
   

216
00:10:56,610 --> 00:11:10,510
So a1, a2, and a4 form a basis
for the column space of A,

217
00:11:10,510 --> 00:11:13,910
because you can construct the
other two guys with linear

218
00:11:13,910 --> 00:11:17,500
combinations of our basis
vectors, and they're also

219
00:11:17,500 --> 00:11:19,060
linearly independent.

220
00:11:19,060 --> 00:11:22,970
Now the next question is what is
the dimension of the basis?

221
00:11:22,970 --> 00:11:24,950
Or what is the dimension-- not
the dimension of the basis--

222
00:11:24,950 --> 00:11:29,240
what is the dimension of
the column space of A?

223
00:11:29,240 --> 00:11:32,490
Well the dimension is just the
number of vectors in any basis

224
00:11:32,490 --> 00:11:33,750
for the column space.

225
00:11:33,750 --> 00:11:36,110
And all bases have the same
number of vectors for any

226
00:11:36,110 --> 00:11:38,120
given subspace.

227
00:11:38,120 --> 00:11:40,270
So we have 1, 2, 3 vectors.

228
00:11:40,270 --> 00:11:44,990
So the dimension of our column
space is equal to 3.

229
00:11:44,990 --> 00:11:48,000
And the dimension of a column
space actually has a specific

230
00:11:48,000 --> 00:11:50,220
term for it, and that's
called the rank.

231
00:11:50,220 --> 00:11:54,690
So the rank of A, which is the
exact same thing as the

232
00:11:54,690 --> 00:11:58,990
dimension of the column space,
it is equal to 3.

233
00:11:58,990 --> 00:12:02,460
And another way to think about
it is, the rank of A is the

234
00:12:02,460 --> 00:12:06,840
number of linearly independent
column vectors that you have

235
00:12:06,840 --> 00:12:09,470
that can span your entire
column space.

236
00:12:09,470 --> 00:12:12,140
Or the number of linearly
independent column vectors

237
00:12:12,140 --> 00:12:14,300
that can be used to construct
all of the

238
00:12:14,300 --> 00:12:15,930
other column vectors.

239
00:12:15,930 --> 00:12:17,730
But hopefully this didn't
confuse you too much, because

240
00:12:17,730 --> 00:12:19,140
the idea is very simple.

241
00:12:19,140 --> 00:12:25,940
Take A, put it into reduced row
echelon form, see which

242
00:12:25,940 --> 00:12:27,090
columns are pivot columns.

243
00:12:27,090 --> 00:12:30,950
The corresponding columns are
going to be a basis for your

244
00:12:30,950 --> 00:12:32,000
column space.

245
00:12:32,000 --> 00:12:35,340
If you want to know the rank for
your matrix, you can just

246
00:12:35,340 --> 00:12:36,360
count them.

247
00:12:36,360 --> 00:12:37,860
Or if you don't want to count
those, you could literally

248
00:12:37,860 --> 00:12:41,210
just count the number of pivot
columns you have in your

249
00:12:41,210 --> 00:12:42,990
reduced row echelon form.

250
00:12:42,990 --> 00:12:44,570
So that's how you do it.

251
00:12:44,570 --> 00:12:46,480
In the next video I'll explain
why this worked.

252
00:12:46,480 --> 00:12:47,963

